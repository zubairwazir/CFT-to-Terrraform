AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  InputInstanceProfileIsEmpty:
    Fn::Equals:
    - Ref: InstanceProfile
    - ''
  IsRegionEast:
    Fn::Equals:
    - Ref: AWS::Region
    - us-east-1
  UseAsg2:
    Fn::Or:
    - Fn::Equals:
      - Ref: AZQuantity
      - '2'
    - Fn::Equals:
      - Ref: AZQuantity
      - '3'
  UseAsg3:
    Fn::Equals:
    - Ref: AZQuantity
    - '3'
  UseAsg4:
    Fn::Equals:
    - Ref: AZQuantity
    - '4'
  UseCustomAmiId:
    Fn::Not:
    - Fn::Equals:
      - Ref: AMIId
      - ''
  UseExtractoIAMRole:
    Fn::Equals:
    - Ref: IAMRoleName
    - ''
  UseExtractoSecurityGroup:
    Fn::Equals:
    - Ref: SecurityGroupId
    - ''
  UseKeyName:
    Fn::Not:
    - Fn::Equals:
      - Ref: KeyName
      - ''
Description: Extracto
Parameters:
  AMIId:
    Default: /nimbus/gold/linux/amazon-2
    Description: The SSM AMI to use
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
  AZQuantity:
    Default: '1'
    Description: Number of availability zones to deploy into (1, 2 or 3).
    Type: Number
  AlertSNSARN:
    Default: 'arn: aws: sns: us-east-1:442119052822:MonitoringEventsCommon'
    Description: ARN of SNS for notification
    Type: String
  AngeloPolarisPassword:
    Default: ''
    Description: AngeloPolaris Password password.
    NoEcho: 'true'
    Type: String
  AngeloSslUrl:
    Default: ''
    Description: Angelo ssl url.
    NoEcho: 'true'
    Type: String
  AngeloTruststore:
    Default: '*'
    Description: 53 location 'bucket/.../keystore' to JKS keystore for encrypting
      connections to the Angelo
    Type: String
  AngeloTruststorePassword:
    Default: ''
    Description: AngeloTruststorePassword password.
    NoEcho: 'true'
    Type: String
  BucketName:
    Default: polaris-chc-prod-datasolutions
    Description: BucketName.
    Type: String
  ClusterName:
    Default: '20240416'
    Description: Name of cluster
    Type: String
  CommonConfiguration:
    Default: ''
    Description: 53 location 'bucket/.../config' to an object that declares cluster(s)
      and consumer(s) for all nodes in the cluster.
    Type: String
  DesiredInstancesPerAZ:
    Default: '1'
    Description: Desired number of instances for each availability zone.
    Type: Number
  EncryptedConnections:
    Default: 'true'
    Description: Encrypt all connections? 'true' or 'false'
    Type: String
  EncryptedStorageKeyId:
    Default: ''
    Description: KMS Key Id for encrypted storage (if empty storage is not encrypted).
    Type: String
  Environment:
    Default: prod
    Description: Environment designator, 'dev' or 'prod'.
    Type: String
  IAMRoleName:
    Default: Polaris-Radagast
    Description: Custom / production IAM role (if empty the DEV-EC2-Role will be used
      which has full privs).
    Type: String
  InstanceProfile:
    Default: Polaris-Radagast
    Description: 'Optional: If provided, it will be used; else a new InstanceProfile
      for the IAM Role will be created.'
    Type: String
  InstanceType:
    Default: c5.4xlarge
    Description: EC2 instance type for cluster.
    Type: String
  KeyName:
    Default: Polaris_PROD_ALL
    Description: EC2 key pair for ssh access to instances
    Type: String
  Keystore:
    Default: polaris-chc-prod-datasolutions/emdeon-polaris-production-7526-us-east-1/extracto/ssl/extracto.keystore
    Description: 53 location 'bucket/.../keystore' to JKS keystore for encrypting
      connections to the Reddo cluster.
    Type: String
  KeystorePassword:
    Default: 1NucQo900PpqEnS
    Description: Keystore password.
    NoEcho: 'true'
    Type: String
  MaximumInstancesPerAZ:
    Default: '2'
    Description: Maximum number of instances for each availability zone.
    Type: Number
  MinimumInstancesPerAZ:
    Default: '1'
    Description: Minimum of instances for each availability zone.
    Type: Number
  NameTag:
    Default: Polaris-Production-20240415-Extracto-Era
    Description: Name resource tag
    Type: String
  PostStartCommand:
    Default: ''
    Description: Command to run after services are started
    Type: String
  PreStartCommand:
    Default: ''
    Description: Command to run before services are started
    Type: String
  ProsperoClusterName:
    Default: ''
    Description: ProsperoClustername for the current stack.
    NoEcho: 'true'
    Type: String
  ProsperoPolarisPassword:
    Default: N1zPlaKTtFBlivK
    Description: ProsperoPolaris Password password.
    NoEcho: 'true'
    Type: String
  ProsperoServiceUrl:
    Default: https://internal-Polaris-P-Prospero-1MMC0A26E4L7-1142668064.us-east-1.elb.amazonaws.com:8443/prospero
    Description: Prospero service Url
    NoEcho: 'true'
    Type: String
  ProsperoTruststore:
    Default: polaris-chc-prod-datasolutions/emdeon-polaris-production-7526-us-east-1/prospero/ssl/prospero.truststore
    Description: 53 location 'bucket/.../keystore' to JKS keystore for encrypting
      connections to the Prospero
    Type: String
  ProsperoTruststorePassword:
    Default: KnbEgd0NY6ZID7t
    Description: ProsperoTruststorePassword password.
    NoEcho: 'true'
    Type: String
  SQSASgAlert1a:
    Default: 'arn:aws: sqs:us-east-1:146637533799: polaris-log-uploader-Era-prod-Extracto-1a'
    Description: Queue to send alert messages to upload logs for az - 1a
    Type: String
  SQSASgAlert1b:
    Default: 'arn: aws: sqs:us-east-1:146637533799: polaris-log-uploader-Era-prod-Extracto-1b'
    Description: Queue to send alert messages to upload logs for az - 1b
    Type: String
  SecurityGroupId:
    Default: ''
    Description: Custom / production security group (if empty all ports will be open
      to everywhere).
    Type: String
  Start:
    Default: 'true'
    Description: Start services when install is complete? 'true' or 'false'
    Type: String
  Subnet1Id:
    Default: subnet-8ee648c7
    Description: First subnet to deploy into (required).
    Type: AWS::EC2::Subnet::Id
  Subnet2Id:
    Default: subnet-4db54816
    Description: Second subnet to deploy into (required if AZQuantity = 2 or 3).
    Type: String
  Subnet3Id:
    Default: subnet-aa3ac587
    Description: Third subnet to deploy into (required if AZQuantity = 3).
    Type: String
  Subnet4Id:
    Default: '*'
    Description: Third subnet to deploy into (required if AZQuantity = 4).
    Type: String
  Tenancy:
    Default: default
    Description: EC2 tenancy type ('default' or 'dedicated')
    Type: String
  TrendPolicyId:
    Default: '741'
    Description: Policy ID to activate for Trend Deep Security.
    Type: Number
  TrendTenantId:
    Default: 831A0C94-869E-79E6-1AE3-114A69544CC8
    Description: Tenant ID for Trend Deep Security.
    Type: String
  TrendTenantPassword:
    Default: 418874C4-E21F-7466-85AE-CAB64DE3E20E
    Description: Tenant password for Trend Deep Security.
    NoEcho: 'true'
    Type: String
  Truststore:
    Default: polaris-chc-prod-datasolutions/emdeon-polaris-production-7526-us-east-1/extracto/ssl/extracto.truststore
    Description: 53 location 'bucket/.../truststore' to JKS truststore for connections
      to Merlin (Cassandra) and Angelo (ActiveMQ).
    Type: String
  TruststorePassword:
    Default: KnbEgd0NY6ZID7t
    Description: Truststore password.
    NoEcho: 'true'
    Type: String
  VPCId:
    Default: vpc-6977590e
    Description: VPC Id to deploy into.
    Type: AWS::EC2::VPC::Id
Resources:
  ExtractoAutoScalingGroup:
    CreationPolicy:
      ResourceSignal:
        Count:
          Ref: Desired Instances PerAZ
        Timeout: PT60M
    Properties:
      DesiredCapacity:
        Ref: DesiredInstancesPerAZ
      HealthCheckType: EC2
      LaunchConfigurationName:
        Ref: ExtractoLaunchConfig
      MaxSize:
        Ref: MaximumInstancesPerAZ
      MinSize:
        Ref: MinimumInstancesPerAZ
      NotificationConfigurations:
      - NotificationTypes:
        - 'autoscaling: EC2_INSTANCE_LAUNCH'
        - 'autoscaling: EC2_INSTANCE_LAUNCH_ERROR'
        - 'autoscaling: EC2_INSTANCE_TERMINATE_ERROR'
        - 'autoscaling: EC2_INSTANCE_TERMINATE'
        TopicARN: 'arn: aws: sns:us-east-1:146637533799: polaris-prod-asg-notifications'
      ServiceLinkedRoleARN: 'arn:aws:iam::146637533799: role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_Polaris'
      TerminationPolicies:
      - Closest ToNextInstanceHour
      - OldestInstance
      - Default
      VPCZoneIdentifier:
      - Ref: Subnet1Id
      - Ref: Subnet2Id
    Type: AWS::AutoScaling::AutoScalingGroup
  ExtractoClusterResizeAlarm:
    Properties:
      AlarmActions:
      - Ref: ExtractoScalingPolicy
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - ' SQS extracto outbound translator message count gone up/down hence resizing
            the cluster'
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
      - Name: AutoscalingGroup
        Value:
          Ref: ExtractoAutoScalingGroup
      EvaluationPeriods: '1'
      MetricName:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - -SQSMessageCount
      Namespace: ClusterResize
      Period: '300'
      Statistic: Minimum
      Threshold: '0'
    Type: AWS::CloudWatch::Alarm
  ExtractoLaunchConfig:
    Metadata:
      AWS::CloudFormation::Authentication:
        RoleBasedAccess:
          buckets:
          - Fn::Join:
            - ''
            - - emdeon-dev
              - '-'
              - Ref: AWS::Region
          roleName: DEV-EC2-Role
          type: S3
      AWS::CloudFormation::Init:
        Extracto:
          commands:
            '01: get Extracto client':
              command: aws s3 cp s3://polaris-chc-prod-datasolutions/nessusagent/nessusagent.sh
                ; chmod 766 nessusagent.sh; ./nessusagent.sh; yum update -y;
            '02: install Extracto':
              command:
                Fn::Join:
                - ''
                - - export stack_id="
                  - Ref: AWS::StackId
                  - '"; export stack_name="'
                  - Ref: AWS::StackName
                  - '"; export cluster_name="'
                  - Ref: ClusterName
                  - '"; export az_quantity="'
                  - Ref: AZQuantity
                  - '"; export minimum_instances_per_az="'
                  - Ref: MinimumInstancesPerAZ
                  - '"; export desired_instances_per_az="'
                  - Ref: DesiredInstancesPerAZ
                  - '"; export maximum_instances_per_az="'
                  - Ref: MaximumInstancesPerAZ
                  - '"; export region="'
                  - Ref: AWS::Region
                  - '"; export start="'
                  - Ref: Start
                  - '"; export pre_start_command="'
                  - Ref: PreStartCommand
                  - '"; export post_start_command="'
                  - Ref: PostStartCommand
                  - '"; export encrypted_connections="'
                  - Ref: EncryptedConnections
                  - '"; export encrypted_storage_keyid="'
                  - Ref: EncryptedStorageKeyId
                  - '"; export common_configuration="'
                  - Ref: CommonConfiguration
                  - '"; export truststore="'
                  - Ref: Truststore
                  - '"; export truststore_password="'
                  - Ref: TruststorePassword
                  - '"; export keystore="'
                  - Ref: Keystore
                  - '"; export angelo_truststore="'
                  - Ref: AngeloTruststore
                  - '"; export angelo_truststore_password="'
                  - Ref: AngeloTruststorePassword
                  - '"; export angelo_polaris_password="'
                  - Ref: AngeloPolarisPassword
                  - '"; export prospero_truststore="'
                  - Ref: ProsperoTruststore
                  - '"; export prospero_truststore_password="'
                  - Ref: ProsperoTruststorePassword
                  - '"; export prospero_polaris_password="'
                  - Ref: ProsperoPolarisPassword
                  - '"; export prospero_cluster_name="'
                  - Ref: ProsperoClusterName
                  - '"; export trend_policy_id="'
                  - Ref: TrendPolicyId
                  - '"; export trend_tenant_id="'
                  - Ref: TrendTenantId
                  - '"; export trend_tenant_password="'
                  - Ref: TrendTenantPassword
                  - '"; export angelo_ssl_url="'
                  - Ref: AngeloSslUrl
                  - '"; export prospero_sevice_url="'
                  - Ref: ProsperoServiceUrl
                  - '"; export environment="'
                  - Ref: Environment
                  - '"; export bucket_name="'
                  - Ref: BucketName
                  - '";cd /opt/polaris/client; /opt/polaris/client/extracto'
        configSets:
          Extracto:
          - Extracto
    Properties:
      AssociatePublic IpAddress: false
      BlockDeviceMappings:
      - DeviceName: /dev/sdc
        VirtualName: ephemeral0
      - DeviceName: /dev/sdd
        VirtualName: ephemeral1
      - DeviceName: /dev/sde
        VirtualName: ephemeral2
      - DeviceName: /dev/sdf
        VirtualName: ephemeral3
      - DeviceName: /dev/sdg
        VirtualName: ephemeral4
      - DeviceName: /dev/sdh
        VirtualName: ephemeral5
      - DeviceName: /dev/sdi
        VirtualName: ephemeral6
      - DeviceName: /dev/sdj
        VirtualName: ephemeral7
      - DeviceName: /dev/xvdm
        Ebs:
          DeleteOnTermination: 'true'
          Encrypted: 'true'
          Iops: 1000
          VolumeSize: '50'
          VolumeType: gp2
      IamInstanceProfile:
        Ref: InstanceProfile
      ImageId:
        Ref: AMIId
      InstanceType:
        Ref: InstanceType
      KeyName:
        Fn::If:
        - UseKeyName
        - Ref: KeyName
        - Ref: AWS::NoValue
      MetadataOptions:
        HttpEndpoint: enabled
        HttpTokens: required
      Placement Tenancy:
        Ref: Tenancy
      SecurityGroups:
      - Fn::If:
        - UseExtractoSecurityGroup
        - Ref: ExtractoSecurityGroup
        - Ref: SecurityGroupId
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - '#!/bin/bash -v

              '
            - 'yum -y update

              '
            - 'yum -y install awslogs

              '
            - 'yum -y update

              '
            - 'cat > /etc/aws logs/aws logs.conf <<<EOF

              '
            - '[general]

              '
            - 'state_file = /var/lib/awslogs/agent-state

              '
            - '[var/log/]

              '
            - 'datetime_format = b %d %H:%M:%S

              '
            - 'file = '
            - '

              '
            - 'buffer_duration = 5000

              '
            - 'initial_position= start_of_file

              '
            - 'log_group_name = '
            - '

              '
            - 'log_stream_name = {instance_id}

              '
            - 'EOF

              '
            - 'systemctl start awslogsd

              '
            - 'systemctl enable awslogsd

              '
            - curl https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip -o awscliv2.zip;
              unzip awscliv2.zip; ./awscli-exe-linux-x86_64/aws/install -i /usr/local
            - 'TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds:
              120")

              '
            - 'instance_id=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/instance-id)

              '
            - 'az=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -s http://169.254.169.254/latest/meta-data/placement/availability-zone)

              '
            - 'region=${az:0:${#az}-1}

              '
            - '/opt/aws/bin/cfn-init -c Extracto --stack '
            - Ref: AWS::StackId
            - --resource ExtractoLaunchConfig
            - --region
            - Ref: AWS::Region
            - '

              '
            - 'asg=$(aws ec2 describe-instances --region $region --instance-ids $instance_id
              --query ''Reservations []. Instances []. Tags [?key==`aws: cloud formation:login'
            - /opt/aws/bin/cfn-signal -e $? --stack
            - Ref: AWS::StackId
            - --resource $asg
            - --region
            - Ref: AWS::Region
            - '

              '
    Type: AWS::AutoScaling::LaunchConfiguration
  ExtractoLifecycleHook:
    Properties:
      AutoScalingGroupName:
        Ref: ExtractoAutoScalingGroup
      DefaultResult: CONTINUE
      HeartbeatTimeout: 600
      LifecycleTransition: 'autoscaling: EC2_INSTANCE_TERMINATING'
      NotificationTargetARN:
        Ref: ExtractoTopic
      RoleARN: 'arn: aws: iam::146637533799: role/aws-service-role/autoscaling.amazonaws.com/AWSServiceRoleForAutoScaling_Polaris'
    Type: AWS::AutoScaling::LifecycleHook
  ExtractoScalingPolicy:
    Properties:
      AdjustmentType: ExactCapacity
      AutoScalingGroupName:
        Ref: ExtractoAutoScalingGroup
      EstimatedInstanceWarmup: '120'
      MetricAggregationType: Average
      PolicyType: StepScaling
      StepAdjustments:
      - MetricInterval LowerBound: '0'
        MetricIntervalUpperBound: '200'
        ScalingAdjustment: '1'
      - MetricInterval LowerBound: '200'
        ScalingAdjustment: '2'
    Type: AWS::AutoScaling::Scaling Policy
  ExtractoSecurityGroup:
    Condition: UseExtractoSecurityGroup
    Metadata:
      Comment: 443-Trend Deep Security, 61616-Angelo,61617-Angelo
    Properties:
      GroupDescription: Extracto stack security group
      SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        FromPort: '0'
        IpProtocol: '-1'
        ToPort: '65535'
      SecurityGroupIngress:
      - CidrIp: 10.0.0.0/8
        FromPort: '-1'
        IpProtocol: icmp
        ToPort: '-1'
      - CidrIp: 10.0.0.0/8
        FromPort: '443'
        IpProtocol: tcp
        ToPort: '443'
      - CidrIp: 10.0.0.0/8
        FromPort: '61616'
        IpProtocol: tcp
        ToPort: '61616'
      - CidrIp: 10.0.0.0/8
        FromPort: '61617'
        IpProtocol: tcp
        ToPort: '61617'
      VpcId:
        Ref: VPCId
    Type: AWS::EC2::SecurityGroup
  ExtractoServiceAlarm:
    Properties:
      AlarmActions:
      - Ref: AlertSNSARN
      AlarmDescription:
        Fn::Join:
        - ''
        - - Ref: AWS::StackName
          - Service alarm for unhealthy host
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: AutoscalingGroup
        Value: ExtractoAutoScalingGroup
      EvaluationPeriods: '1'
      MetricName: ExtractoRunningCount
      Namespace: ExtractoService
      Period: '300'
      Statistic: Minimum
      Threshold: '0'
    Type: AWS::CloudWatch::Alarm
  ExtractoTopic:
    Properties:
      KmsMasterKeyId: d82fa3dc-2168-4d9e-b2cb-5c5e3b45d935
      Subscription:
      - Endpoint:
          Ref: SQSASgAlert1a
        Protocol: sqs
      - Endpoint:
          Ref: SQSASgAlert1b
        Protocol: sqs
      Tags:
      - Key: Billing
        Value: DataSolutions/Polaris
      - Key: APP_ID
        Value: '842'
      - Key: COST_CENTER
        Value: '40139'
      TopicName:
        Ref: AWS::StackName
    Type: AWS::SNS::Topic